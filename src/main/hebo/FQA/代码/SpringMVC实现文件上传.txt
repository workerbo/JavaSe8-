1.SpringMVC实现文件上传：
和Servlet方式的本质一样，都是通过commons-fileupload.jar和commons-io.jar
SpringMVC可以简化文件上传的代码，但是必须满足条件：实现MultipartResolver接口 ；
而该接口的实现类SpringMVC也已经提供了CommonsMultipartResolver

具体步骤：（直接使用CommonsMultipartResolver实现上传）
a.jar包
commons-fileupload.jar、commons-io.jar
b.配置CommonsMultipartResolver
将其加入SpringIOC容器


	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<property name="defaultEncoding" value="UTF-8"></property>
			<!-- 上传单个文件的最大值，单位Byte;如果-1，表示无限制 -->
			<property name="maxUploadSize"  value="102400"></property>
	</bean>
	

c.处理方法
		//文件上传处理方法
		@RequestMapping(value="testUpload") //abc.png
		public String testUpload(@RequestParam("desc") String desc  , @RequestParam("file") MultipartFile file  ) throws IOException {
			
			System.out.println("文件描述信息："+desc);
			//jsp中上传的文件：file
			
			InputStream input = file.getInputStream() ;//IO
			String fileName = file.getOriginalFilename() ;
			
			OutputStream out = new FileOutputStream("d:\\"+fileName) ;
			
			
			byte[] bs = new byte[1024];
			int len = -1;
			while(( len = input.read(bs)) !=-1 ) {
				out.write(bs, 0, len);
			}
			out.close();
			input.close();
			//将file上传到服务器中的 某一个硬盘文件中
		System.out.println("上传成功！");
			
			return "success";
		}

	<form action="handler/testUpload" method="post"  enctype="multipart/form-data">
		<input type="file" name="file" />
		描述:<input name="desc" type="text" />
		
		<input type="submit" value="上传">
	</form>