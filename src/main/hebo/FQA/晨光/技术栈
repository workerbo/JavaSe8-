=========技术栈

=================
标密上传应用   ****
HCBM 设置获取用户密级和文件最大密级
SEGAgent 检查文件密级是否超过最大密级
HCBM 上传文件到fastdfs，记录存储信息到sysfile表。记录文本信息到contracttext表！

================
HAP 密码校验器，并能实现跳过校验  单点登录  ****
cas 模块  转发会经过客户端浏览器！
1.多个同包名同类名加载顺序  以classpath下加载顺序指定   优先加载第一个   jvm 类加载器的相关知识！
从index.html页面判断是否登录，否进入登录页面。(此处判断登录方式)
根据登录方式进行认证
springsecrity 进行访问控制、权限校验  web请求级，方法调用级（AOP和servlet过滤器）  多个配置文件
标准登录的配置文件 


访问控制  消息管理  websockt






======  
Webservice



Message 消息中心   CacheMessage
https://blog.csdn.net/qyf_5445/article/details/8124431

========重点模块
拟制模块

变更模块

模板模块


============
面包屑导航栏  **
通过面包屑组件，填充每个面包屑的属性！
是一个整体，通过js切换

==========
文件下载
https://blog.csdn.net/weixin_41305441/article/details/85003066




匿名内部类（Lamada表达式更加简洁的方式,实现了函数式接口的类）
https://www.cnblogs.com/onetwo/p/8526374.html


首先要提到与分布式锁相对应的是线程锁、进程锁。
http://weixin.sogou.com/



viewModel和grid的联系
正则和json的双重转义
参考hap文档
表单在viewmodel设置默认值

java8
https://www.cnblogs.com/onetwo/p/8526374.html

====================



==========service 实现接口ProxySelf的意义
https://blog.csdn.net/u014788227/article/details/90111662
对B方法（A中调用B）的增强记录日志无法切入 因为方法的调用对象是目标对象不是代理对象
解决方案就是把service的A方法中对B的调用改成代理对象的调用
，AopContext.currentProxy()使用ThreadLocal保存了代理对象
因此self().B()就能解决。



==========mybait
HAP 中多语言新增,更新,删除 逻辑是通过 MyBatis 的 Interceptor 来实现的，具体可参考实现类 MultiLanguageInterceptor

HAP 根据 DTO 中的注解自动生成查询 SQL 关联多语言表，具体相关类 SqlHelper



========
事务与锁

事务的隔离性与锁
https://www.cnblogs.com/phoebus0501/archive/2011/02/28/1966709.html


=========
数据批导程序
1.Excel模板的编写！
2.导入的数据校验和前端提示！
多个sheet，初始化参数（开始行，列，目标对象）   map集合
excel数据的提取：循环sheet，循环行、列   返回值为集合的Map，key为DTO类名
数据的获取严格按照dto的顺序

提取数据进行分sheet页进行校验【数据类型校验、必填】（在校验的过程中通过快码将含义转为值）






公司Excel导入导出  全部列全部数据

用户员工导入：
取数据： 通过快码配置得到每列的配置对象！ 配置对象的序号必须与表格顺序一致    通过Map将一行数据转为dto。（同时将menaing转化为value）
校验：【逐行校验】对每行数据进行业务逻辑校验
插入数据：批量更新或者插入数据

授权导入：
取数据：
校验：
插入数据：

批导导入： 
取数据： 通过常量类的配置获取行列，页面起始、sheet对应的dto对象！【sheet页面的顺序与配置对象添加顺序要一致！】  通过反射获得的字段对象组顺序与表格字段顺序必须一致！ 【通过列的索引去取反射字段的对象】      
校验：各个sheet页面的到dto集合 【统一校验】通过获取所有的ID，在查询数据库匹配的值（in语句）。
最后逐条校验【并进行基础校验】！{在单独一个Mapper中，查询结果通过别名进行字段映射}。在校验的时候进行含义转值。
插入数据：  将校验后的数据转化到dto（手动转这）插入

授权导出：


总结：拆分出一个转化dto原因是因为加了很多校验注解和附属字段！
通过注解进行配置顺序，校验
获取所有数据后统一进行校验、然后转化插入或者更新
将配置、校验、插入数据封装在一个bean当中。并且可以抽象化，适应不同的模块


两种Excel导入对比
校验的不同！
配置的方式 （快码） ：  序列值和表格顺序一致
注解的方式   ：   
转化到dto的不同
通过map转化为dto
严格按照顺序  （中间有解析dto，实际插入另有dto）






前端页面优化处理

JSR303 optionnal

并发问题

junit测试

Spring好通过注解的方式来运行单元测试